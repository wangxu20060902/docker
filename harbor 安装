harbor 安装

cpu 2core memory 4G namespace 40G

base ENV
Docker engine	Version 17.06.0-ce+ or higher	For installation instructions, see Docker Engine documentation
Docker Compose	Version 1.18.0 or higher	For installation instructions, see Docker Compose documentation
Openssl	         Latest is preferred	Used to generate certificate and keys for Harbor

ports:
443	     HTTPS	
4443	HTTPS	
80	   HTTP	

Docker installation
较旧的 Docker 版本称为 docker 或 docker-engine 。如果已安装这些程序，请卸载它们以及相关的依赖项
sudo yum remove docker \
                  docker-client \
                  docker-client-latest \
                  docker-common \
                  docker-latest \
                  docker-latest-logrotate \
                  docker-logrotate \
                  docker-engin
使用 Docker 仓库进行安装
在新主机上首次安装 Docker Engine-Community 之前，需要设置 Docker 仓库。之后，您可以从仓库安装和更新 Docker
安装所需的软件包。yum-utils 提供了 yum-config-manager ，并且 device mapper 存储驱动程序需要 device-mapper-persistent-data 和 lvm2
sudo yum install -y yum-utils \
  device-mapper-persistent-data \
  lvm2
使用以下命令来设置稳定的仓库。

sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo
安装最新版本的 Docker Engine-Community 和 containerd，或者转到下一步安装特定版本：
sudo yum install docker-ce docker-ce-cli containerd.io

Docker 安装完默认未启动。并且已经创建好 docker 用户组，但该用户组下没有用户。

要安装特定版本的 Docker Engine-Community，请在存储库中列出可用版本，然后选择并安装：

1、列出并排序您存储库中可用的版本。此示例按版本号（从高到低）对结果进行排序。
yum list docker-ce --showduplicates | sort -r

通过其完整的软件包名称安装特定版本，该软件包名称是软件包名称（docker-ce）加上版本字符串（第二列），从第一个冒号（:）一直到第一个连字符，并用连字符（-）分隔。例如：docker-ce-18.09.1。

sudo yum install docker-ce-<VERSION_STRING> docker-ce-cli-<VERSION_STRING> containerd.io
启动docker 并加到开机启动
sudo systemctl start docker
systemctl enable docker

Docker compose install
sudo curl -L "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose

配置https ssl证书

openssl genrsa -out ca.key 4096   #生成根证书私钥（无加密）

生成自签名证书（使用已有私钥ca.key自行签发根证书）
openssl req -x509 -new -nodes -sha512 -days 3650 \
 -subj "/C=CN/ST=Beijing/L=Beijing/O=example/OU=harbor/CN=edu.harbor.com" \
 -key ca.key \
 -out ca.crt
 获得证书服务器
创建私钥
openssl genrsa -out edu.harbor.com.key 4096

生成证书签名
openssl req -sha512 -new \
    -subj "/C=CN/ST=Beijing/L=Beijing/O=example/OU=harbor/CN=edu.harbor.com" \
    -key edu.harbor.com.key \
    -out edu.harbor.com.csr
生成注册表主机的证书
cat > v3.ext <<-EOF
authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
extendedKeyUsage = serverAuth
subjectAltName = @alt_names

[alt_names]
DNS.1=edu.harbor.com
DNS.2=edu.harbor
DNS.3=docker01
EOF

openssl x509 -req -sha512 -days 3650 \
    -extfile v3.ext \
    -CA ca.crt -CAkey ca.key -CAcreateserial \
    -in edu.harbor.com.csr \
    -out edu.harbor.com.crt
转换证书
openssl x509 -inform PEM -in edu.harbor.com.crt -out edu.harbor.com.cert

为Docker配置服务器证书，密钥和CA
mkdir -p /etc/docker/certs.d/edu.harbor.com
cp edu.harbor.com.cert edu.harbor.com.key ca.crt /etc/docker/certs.d/edu.harbor.com/

mkdir -p /opt/harbor/
wget -P /opt/harbor/ https://storage.googleapis.com/harbor-releases/release-1.9.0/harbor-offline-installer-v1.9.0.tgz
cd /opt/harbor/
tar xf harbor-offline-installer-v1.9.0.tgz
cd /opt/harbor/harbor
cp harbor.yml harbor.yml.bak

vim  harbor.yml   更改配置文件
hostname: edu.harbor.com

http:
  port: 80

https:
  # https port for harbor, default is 443
  port: 443
  # The path of cert and key files for nginx
  certificate: /usr/local/harbor/ssl/edu.harbor.com.crt
  private_key: /usr/local/harbor/ssl/edu.harbor.com.key

./prepare   ###为Harbor生成配置文件
./install.sh  ##
